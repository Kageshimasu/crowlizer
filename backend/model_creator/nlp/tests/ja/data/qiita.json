{
    "user": {
        "facebook_id": "hiroki.nakayama.9235",
        "linkedin_id": "hironsan",
        "followers_count": 269,
        "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/77079/profile-images/1473700709",
        "name": "",
        "twitter_screen_name": "Hironsan13",
        "organization": "",
        "followees_count": 19,
        "location": "Tokyo",
        "github_login_name": "Hironsan",
        "description": "R&D部門で自然言語処理/機械学習の研究開発をしています。Qiitaでは実践的な自然言語処理の話を中心に情報発信しています。ねことPythonが好き。",
        "website_url": "http://ahogrammer.com/",
        "items_count": 42,
        "permanent_id": 77079,
        "id": "Hironsan"
    },
    "private": false,
    "group": null,
    "annotations": [
        {
            "annotator-id": 0,
            "quality": "0"
        },
        {
            "annotator-id": 1,
            "quality": "1"
        },
        {
            "annotator-id": 2,
            "quality": "1"
        }
    ],
    "title": "名刺から情報を抽出するSlackBotを作る",
    "created_at": "2016-11-14T10:11:33+09:00",
    "rendered_body": "\n<h1>\n<span id=\"はじめに\" class=\"fragment\"></span><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>はじめに</h1>\n\n<p>今までやってきたことを組み合わせてSlackにコメント付きで名刺画像をアップロードすると、名刺情報をkintoneに登録するようにしてみましょう。APIを使うためにPythonを用いて作ることにします。</p>\n\n<p>前回記事はこちら:</p>\n\n<ul>\n<li><a href=\"http://qiita.com/Hironsan/items/166515acec35658986b2\" id=\"reference-6bfa730b2a706723f4fe\">Vision APIとNatural Language APIを組み合わせて名刺から情報抽出する</a></li>\n</ul>\n\n<h1>\n<span id=\"これから作るアプリ\" class=\"fragment\"></span><a href=\"#%E3%81%93%E3%82%8C%E3%81%8B%E3%82%89%E4%BD%9C%E3%82%8B%E3%82%A2%E3%83%97%E3%83%AA\"><i class=\"fa fa-link\"></i></a>これから作るアプリ</h1>\n\n<p>以下のように名刺画像をSlackにアップロードするとBotが情報を抽出してkintoneに登録してくれます。<br>\n<a href=\"https://qiita-image-store.s3.amazonaws.com/0/77079/4d561447-022d-f7a3-9fa9-123c957cbd8b.png\" target=\"_blank\" rel=\"nofollow noopener\"><img width=\"450\" alt=\"スクリーンショット 2016-11-08 15.59.53.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/77079/4d561447-022d-f7a3-9fa9-123c957cbd8b.png\"></a></p>\n\n<p><a href=\"https://www.youtube.com/watch?v=9RJZMSsH7-g\" rel=\"nofollow noopener\" target=\"_blank\">Slackとは？</a></p>\n\n<h1>\n<span id=\"アプリ作成の流れ\" class=\"fragment\"></span><a href=\"#%E3%82%A2%E3%83%97%E3%83%AA%E4%BD%9C%E6%88%90%E3%81%AE%E6%B5%81%E3%82%8C\"><i class=\"fa fa-link\"></i></a>アプリ作成の流れ</h1>\n\n<p>Step 0：アプリ作成の準備をする<br>\n↓<br>\nStep 1：pykintoneを使ってkintoneにデータ登録をする<br>\n↓<br>\nStep 2：SlackBotを作る<br>\n↓<br>\nStep 3：Slackからkintoneへ名刺情報を登録する</p>\n\n<h1>\n<span id=\"step010min-アプリ作成の準備をする\" class=\"fragment\"></span><a href=\"#step010min-%E3%82%A2%E3%83%97%E3%83%AA%E4%BD%9C%E6%88%90%E3%81%AE%E6%BA%96%E5%82%99%E3%82%92%E3%81%99%E3%82%8B\"><i class=\"fa fa-link\"></i></a>Step0(10min) アプリ作成の準備をする</h1>\n\n<p>アプリを作るために、必要なライブラリのインストール、SlackBotアカウントの作成、APIキーの設定を行います。</p>\n\n<h2>\n<span id=\"必要なライブラリをインストールする\" class=\"fragment\"></span><a href=\"#%E5%BF%85%E8%A6%81%E3%81%AA%E3%83%A9%E3%82%A4%E3%83%96%E3%83%A9%E3%83%AA%E3%82%92%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%99%E3%82%8B\"><i class=\"fa fa-link\"></i></a>必要なライブラリをインストールする</h2>\n\n<p>アプリを作成するために必要なライブラリをインストールします。以下のコマンドを実行してインストールしてください。</p>\n\n<div class=\"code-frame\" data-lang=\"shell-session\"><div class=\"highlight\"><pre>\n<span class=\"go\">$ pip install pykintone</span>\n<span class=\"go\">$ pip install slackbot</span>\n</pre></div></div>\n\n<h2>\n<span id=\"slackbotアカウントを作成する\" class=\"fragment\"></span><a href=\"#slackbot%E3%82%A2%E3%82%AB%E3%82%A6%E3%83%B3%E3%83%88%E3%82%92%E4%BD%9C%E6%88%90%E3%81%99%E3%82%8B\"><i class=\"fa fa-link\"></i></a>SlackBotアカウントを作成する</h2>\n\n<p>まずはSlack Botアカウントを作成しましょう。</p>\n\n\n\n<p><a href=\"https://my.slack.com/services/new/bot\" rel=\"nofollow noopener\" target=\"_blank\">https://my.slack.com/services/new/bot</a></p>\n\n<p>既にチームのSlackは開設済で、権限のあるユーザでログインしているものとします。その状態で、上記リンクを開くと、Botアカウントの作成画面が開きます。表示されているフォーム中にBotアカウントのユーザ名を入力して、「Add bot integration」を押してください。<br>\n<a href=\"https://qiita-image-store.s3.amazonaws.com/0/77079/3273c39b-618d-b712-2928-7905516fd9a0.png\" target=\"_blank\" rel=\"nofollow noopener\"><img width=\"450\" alt=\"スクリーンショット 2016-08-21 22.10.05.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/77079/3273c39b-618d-b712-2928-7905516fd9a0.png\"></a></p>\n\n<p>「Add bot integration」を押すと、新たにフォームが表示されます。その中の「API Token」は後で作成するBotで用いるのでメモしてください。<br>\n<a href=\"https://qiita-image-store.s3.amazonaws.com/0/77079/42c5aba5-0ced-6ee6-4b77-00bd3ecac688.png\" target=\"_blank\" rel=\"nofollow noopener\"><img width=\"450\" alt=\"スクリーンショット 2016-08-21 22.25.23.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/77079/42c5aba5-0ced-6ee6-4b77-00bd3ecac688.png\"></a></p>\n\n<p>「Customize Icon」や「Customize Name」で作成したBotの名前やアイコン画像を変更できます。変更内容を「Save Integration」で保存します。<br>\n<a href=\"https://qiita-image-store.s3.amazonaws.com/0/77079/455e3859-7487-b7f3-a3bb-4257e099d203.png\" target=\"_blank\" rel=\"nofollow noopener\"><img width=\"450\" alt=\"スクリーンショット 2016-08-21 22.26.46.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/77079/455e3859-7487-b7f3-a3bb-4257e099d203.png\"></a></p>\n\n<p>この後のテスト用にプライベートチャンネルを作成して作成したBotを登録しておきましょう。下記のように設定したら、「Create Channel」で内容を保存します。<br>\n<a href=\"https://qiita-image-store.s3.amazonaws.com/0/77079/a28c5a27-cb19-cc78-cc39-8e452e9ac920.png\" target=\"_blank\" rel=\"nofollow noopener\"><img width=\"450\" alt=\"スクリーンショット 2016-08-21 22.30.18.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/77079/a28c5a27-cb19-cc78-cc39-8e452e9ac920.png\"></a></p>\n\n<p>以上でSlackBotの設定は完了です。</p>\n\n<h2>\n<span id=\"apiキーを設定する\" class=\"fragment\"></span><a href=\"#api%E3%82%AD%E3%83%BC%E3%82%92%E8%A8%AD%E5%AE%9A%E3%81%99%E3%82%8B\"><i class=\"fa fa-link\"></i></a>APIキーを設定する</h2>\n\n<h3>\n<span id=\"slackのapiキーを設定する\" class=\"fragment\"></span><a href=\"#slack%E3%81%AEapi%E3%82%AD%E3%83%BC%E3%82%92%E8%A8%AD%E5%AE%9A%E3%81%99%E3%82%8B\"><i class=\"fa fa-link\"></i></a>SlackのAPIキーを設定する</h3>\n\n<p>Slackで取得したAPIキーを設定ファイル(plugins/config/slack.yaml)に記述します。エディタでslack.yamlを開いて、tokenの値をあなたのSlackのAPIキーの値で上書きしましょう。xxxの部分を書き換えてください。</p>\n\n<div class=\"code-frame\" data-lang=\"yaml\">\n<div class=\"code-lang\"><span class=\"bold\">slack.yaml</span></div>\n<div class=\"highlight\"><pre>\n<span class=\"l-Scalar-Plain\">token</span><span class=\"p-Indicator\">:</span> <span class=\"l-Scalar-Plain\">xxx</span>\n</pre></div>\n</div>\n\n<h3>\n<span id=\"kintoneのapiキーを設定する\" class=\"fragment\"></span><a href=\"#kintone%E3%81%AEapi%E3%82%AD%E3%83%BC%E3%82%92%E8%A8%AD%E5%AE%9A%E3%81%99%E3%82%8B\"><i class=\"fa fa-link\"></i></a>kintoneのAPIキーを設定する</h3>\n\n<p>kintoneで取得したAPIキー、ドメイン名、アプリIDを設定ファイル(plugins/config/kintone.yaml)に記述します。エディタでkintone.yamlを開いて、domain、id、tokenの値をあなたのkintoneアプリのドメイン名、アプリID、APIキーの値で上書きしましょう。xxxの部分を書き換えてください。</p>\n\n<div class=\"code-frame\" data-lang=\"yaml\">\n<div class=\"code-lang\"><span class=\"bold\">kintone.yaml</span></div>\n<div class=\"highlight\"><pre>\n<span class=\"l-Scalar-Plain\">domain</span><span class=\"p-Indicator\">:</span> <span class=\"l-Scalar-Plain\">xxx</span>\n<span class=\"l-Scalar-Plain\">apps</span><span class=\"p-Indicator\">:</span>\n    <span class=\"l-Scalar-Plain\">test</span><span class=\"p-Indicator\">:</span>\n        <span class=\"l-Scalar-Plain\">id</span><span class=\"p-Indicator\">:</span> <span class=\"l-Scalar-Plain\">xxx</span>\n        <span class=\"l-Scalar-Plain\">token</span><span class=\"p-Indicator\">:</span> <span class=\"l-Scalar-Plain\">xxx</span>\n</pre></div>\n</div>\n\n<h1>\n<span id=\"step110min-pykintoneを使ってkintoneにデータ登録をする\" class=\"fragment\"></span><a href=\"#step110min-pykintone%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6kintone%E3%81%AB%E3%83%87%E3%83%BC%E3%82%BF%E7%99%BB%E9%8C%B2%E3%82%92%E3%81%99%E3%82%8B\"><i class=\"fa fa-link\"></i></a>Step1(10min) pykintoneを使ってkintoneにデータ登録をする</h1>\n\n<p>ここではpykintoneを使ってkintoneに情報を登録するためのスクリプトの記述を行います。記述を行ったら、動作確認のためにスクリプトを実行します。ではまずはスクリプトの記述から行いましょう。</p>\n\n<h2>\n<span id=\"スクリプトの記述\" class=\"fragment\"></span><a href=\"#%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%97%E3%83%88%E3%81%AE%E8%A8%98%E8%BF%B0\"><i class=\"fa fa-link\"></i></a>スクリプトの記述</h2>\n\n<p>kintoneに情報を登録するために、スクリプトを記述します。スクリプトの場所は、plugins/apis/kintone.pyです。エディタでkintone.pyを開いて、内容を以下のように書き換えましょう。書き換え終わったら保存してください。その際の文字コードはUTF8でお願いします。</p>\n\n<div class=\"code-frame\" data-lang=\"py3\"><div class=\"highlight\"><pre>\n<span class=\"c\"># -*- coding: utf-8 -*-</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pykintone</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pykintone</span> <span class=\"k\">import</span> <span class=\"n\">model</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pykintone.structure_field</span> <span class=\"k\">as</span> <span class=\"nn\">sf</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">BusinessCard</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">kintoneModel</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">app</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">company</span><span class=\"p\">,</span> <span class=\"n\">location</span><span class=\"p\">,</span> <span class=\"n\">impression</span><span class=\"p\">,</span> <span class=\"n\">submitter</span><span class=\"p\">,</span> <span class=\"n\">image_path</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">(</span><span class=\"n\">BusinessCard</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">__init__</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">name</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">company</span> <span class=\"o\">=</span> <span class=\"n\">company</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">location</span> <span class=\"o\">=</span> <span class=\"n\">location</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">impression</span> <span class=\"o\">=</span> <span class=\"n\">impression</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">submitter</span> <span class=\"o\">=</span> <span class=\"n\">submitter</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">image</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">sf</span><span class=\"o\">.</span><span class=\"n\">File</span><span class=\"o\">.</span><span class=\"n\">upload</span><span class=\"p\">(</span><span class=\"n\">image_path</span><span class=\"p\">,</span> <span class=\"n\">app</span><span class=\"p\">)]</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">create_card</span><span class=\"p\">(</span><span class=\"n\">comment</span><span class=\"p\">,</span> <span class=\"n\">entities</span><span class=\"p\">,</span> <span class=\"n\">file_path</span><span class=\"p\">,</span> <span class=\"n\">submitter</span><span class=\"p\">,</span> <span class=\"n\">conf_path</span><span class=\"p\">):</span>\n    <span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">pykintone</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">conf_path</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">app</span><span class=\"p\">()</span>\n\n    <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">company</span><span class=\"p\">,</span> <span class=\"n\">location</span> <span class=\"o\">=</span> <span class=\"n\">entities</span><span class=\"p\">[</span><span class=\"s\">'PERSON'</span><span class=\"p\">],</span> <span class=\"n\">entities</span><span class=\"p\">[</span><span class=\"s\">'ORGANIZATION'</span><span class=\"p\">],</span> <span class=\"n\">entities</span><span class=\"p\">[</span><span class=\"s\">'LOCATION'</span><span class=\"p\">]</span>\n    <span class=\"n\">card</span> <span class=\"o\">=</span> <span class=\"n\">BusinessCard</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">company</span><span class=\"p\">,</span> <span class=\"n\">location</span><span class=\"p\">,</span> <span class=\"n\">comment</span><span class=\"p\">,</span> <span class=\"n\">submitter</span><span class=\"p\">,</span> <span class=\"n\">file_path</span><span class=\"p\">)</span>\n    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">card</span><span class=\"p\">)</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">ok</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">result</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">)</span>\n</pre></div></div>\n\n<p>create_cardに名刺情報とAPIキーの設定ファイルを与えることで、名刺情報をkintoneに登録してくれます。では動作確認のために実行してみましょう。</p>\n\n<h2>\n<span id=\"スクリプトの実行\" class=\"fragment\"></span><a href=\"#%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%97%E3%83%88%E3%81%AE%E5%AE%9F%E8%A1%8C\"><i class=\"fa fa-link\"></i></a>スクリプトの実行</h2>\n\n<p>先ほど書いたスクリプトを実行してみましょう。<br>\nまずplugins/testsフォルダに移動してください。その中にtest_kintone.pyがあるのを確認できるでしょうか。test_kintone.pyでは先ほど書いたスクリプトのcreate_cardを呼び出すように指定しています。つまり、正しく動作すれば名刺情報を与えた時にその情報がkintoneに登録されるはずです。</p>\n\n<div class=\"code-frame\" data-lang=\"shell-session\"><div class=\"highlight\"><pre>\n<span class=\"go\">$ python test_kintone.py data/example.png</span>\n</pre></div></div>\n\n<p>実行結果として以下のようにkintoneに名刺情報が登録されたでしょうか？<br>\n<a href=\"https://qiita-image-store.s3.amazonaws.com/0/77079/eb5705d8-143e-9ca1-6677-a33a595888c9.png\" target=\"_blank\" rel=\"nofollow noopener\"><img width=\"1044\" alt=\"スクリーンショット 2016-11-08 15.19.12.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/77079/eb5705d8-143e-9ca1-6677-a33a595888c9.png\"></a></p>\n\n<h1>\n<span id=\"step210min-slackbotを作る\" class=\"fragment\"></span><a href=\"#step210min-slackbot%E3%82%92%E4%BD%9C%E3%82%8B\"><i class=\"fa fa-link\"></i></a>Step2(10min) SlackBotを作る</h1>\n\n<p>ここではごくごく基礎的なSlackBotを動かすためのスクリプトの記述を行います。記述を行ったら、動作確認のためにスクリプトを実行します。ではまずはスクリプトの記述から行いましょう。</p>\n\n<h2>\n<span id=\"スクリプトの記述-1\" class=\"fragment\"></span><a href=\"#%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%97%E3%83%88%E3%81%AE%E8%A8%98%E8%BF%B0-1\"><i class=\"fa fa-link\"></i></a>スクリプトの記述</h2>\n\n<p>SlackBotを作るために、スクリプトを記述します。スクリプトの場所は、plugins/slack.pyです。エディタでslack.pyを開いて、以下の内容を<strong><font color=\"red\">追記</font></strong>してください。追記し終わったら保存してください。その際の文字コードはUTF8でお願いします。</p>\n\n<div class=\"code-frame\" data-lang=\"py3\"><div class=\"highlight\"><pre>\n<span class=\"kn\">from</span> <span class=\"nn\">slackbot.bot</span> <span class=\"k\">import</span> <span class=\"n\">respond_to</span>\n\n<span class=\"nd\">@respond_to</span><span class=\"p\">(</span><span class=\"s\">'こんにちは'</span><span class=\"p\">)</span>\n<span class=\"nd\">@respond_to</span><span class=\"p\">(</span><span class=\"s\">'今日は'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">hello</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">):</span>\n    <span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">reply</span><span class=\"p\">(</span><span class=\"s\">'こんにちは!'</span><span class=\"p\">)</span>\n</pre></div></div>\n\n<p>“respond_to”にマッチするキーワードを指定することで、Botに対するメンションに反応するようになります。とにかく動かしてみましょう。</p>\n\n<h2>\n<span id=\"スクリプトの実行-1\" class=\"fragment\"></span><a href=\"#%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%97%E3%83%88%E3%81%AE%E5%AE%9F%E8%A1%8C-1\"><i class=\"fa fa-link\"></i></a>スクリプトの実行</h2>\n\n<p>ではSlackBotを起動してみましょう。<br>\nトップレベルにあるbot.pyを起動して<strong><font color=\"red\">@をつけて</font></strong>メッセージを送ってみましょう。</p>\n\n<div class=\"code-frame\" data-lang=\"shell-session\"><div class=\"highlight\"><pre>\n<span class=\"go\">$ python bot.py</span>\n</pre></div></div>\n\n<p>以下のように反応したでしょうか？<br>\n<a href=\"https://qiita-image-store.s3.amazonaws.com/0/77079/050c33a3-f351-5a31-2042-9c2cd01442d3.png\" target=\"_blank\" rel=\"nofollow noopener\"><img width=\"379\" alt=\"スクリーンショット 2016-11-08 15.19.12.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/77079/050c33a3-f351-5a31-2042-9c2cd01442d3.png\"></a></p>\n\n<h1>\n<span id=\"step310min-slackからkintoneへ名刺情報を登録する\" class=\"fragment\"></span><a href=\"#step310min-slack%E3%81%8B%E3%82%89kintone%E3%81%B8%E5%90%8D%E5%88%BA%E6%83%85%E5%A0%B1%E3%82%92%E7%99%BB%E9%8C%B2%E3%81%99%E3%82%8B\"><i class=\"fa fa-link\"></i></a>Step3(10min) Slackからkintoneへ名刺情報を登録する</h1>\n\n<p>さて、いよいよ今までの集大成です。Slackに名刺画像をアップロードすると、SlackBot経由でkintoneに情報を登録します。まずはVision API、Natural Language API、kintone APIを統合したSlackBotスクリプトの記述を行います。記述を行ったら、動作確認のためにスクリプトを実行します。ではまずはスクリプトの記述から行いましょう。</p>\n\n<h2>\n<span id=\"スクリプトの記述-2\" class=\"fragment\"></span><a href=\"#%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%97%E3%83%88%E3%81%AE%E8%A8%98%E8%BF%B0-2\"><i class=\"fa fa-link\"></i></a>スクリプトの記述</h2>\n\n<p>SlackBotからkintoneに名刺情報を登録するためのスクリプトを記述します。スクリプトの場所は、plugins/slack.pyです。エディタでslack.pyを開いて、以下の内容を<strong><font color=\"red\">追記</font></strong>してください。追記し終わったら保存してください。その際の文字コードはUTF8でお願いします。</p>\n\n<div class=\"code-frame\" data-lang=\"py3\"><div class=\"highlight\"><pre>\n<span class=\"nd\">@listen_to</span><span class=\"p\">(</span><span class=\"s\">'(.*)'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">anymessage</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">,</span> <span class=\"n\">something</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"s\">'file'</span> <span class=\"ow\">in</span> <span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">body</span><span class=\"p\">:</span>\n        <span class=\"n\">slack_token</span> <span class=\"o\">=</span> <span class=\"n\">loader</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">BASE_DIR</span><span class=\"p\">,</span> <span class=\"s\">'config/slack.yaml'</span><span class=\"p\">))</span>\n        <span class=\"n\">google_token</span> <span class=\"o\">=</span> <span class=\"n\">loader</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">BASE_DIR</span><span class=\"p\">,</span> <span class=\"s\">'config/google.yaml'</span><span class=\"p\">))</span>\n        <span class=\"n\">kintone_conf</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">BASE_DIR</span><span class=\"p\">,</span> <span class=\"s\">'config/kintone.yaml'</span><span class=\"p\">)</span>\n\n        <span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">body</span><span class=\"p\">[</span><span class=\"s\">'file'</span><span class=\"p\">][</span><span class=\"s\">'url_private_download'</span><span class=\"p\">]</span>\n        <span class=\"n\">submitter</span> <span class=\"o\">=</span> <span class=\"n\">get_user_name</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">body</span><span class=\"p\">[</span><span class=\"s\">'user'</span><span class=\"p\">],</span> <span class=\"n\">slack_token</span><span class=\"p\">[</span><span class=\"s\">'token'</span><span class=\"p\">])</span>\n        <span class=\"n\">img_path</span> <span class=\"o\">=</span> <span class=\"n\">download_image</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">,</span> <span class=\"n\">slack_token</span><span class=\"p\">[</span><span class=\"s\">'token'</span><span class=\"p\">])</span>\n\n        <span class=\"n\">entities</span> <span class=\"o\">=</span> <span class=\"n\">extract_entities_from_img</span><span class=\"p\">(</span><span class=\"n\">img_path</span><span class=\"p\">,</span> <span class=\"n\">google_token</span><span class=\"p\">[</span><span class=\"s\">'token'</span><span class=\"p\">])</span>\n\n        <span class=\"n\">comment</span> <span class=\"o\">=</span> <span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">body</span><span class=\"p\">[</span><span class=\"s\">'file'</span><span class=\"p\">][</span><span class=\"s\">'initial_comment'</span><span class=\"p\">][</span><span class=\"s\">'comment'</span><span class=\"p\">]</span>\n        <span class=\"n\">create_card</span><span class=\"p\">(</span><span class=\"n\">comment</span><span class=\"p\">,</span> <span class=\"n\">entities</span><span class=\"p\">,</span> <span class=\"n\">img_path</span><span class=\"p\">,</span> <span class=\"n\">submitter</span><span class=\"p\">,</span> <span class=\"n\">kintone_conf</span><span class=\"p\">)</span>\n        <span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">reply</span><span class=\"p\">(</span><span class=\"s\">'名刺情報を登録しました。'</span><span class=\"p\">)</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">reply</span><span class=\"p\">(</span><span class=\"s\">'名刺情報の登録をできますよ。'</span><span class=\"p\">)</span>\n</pre></div></div>\n\n<p>名刺画像がアップロードされた場合は、名刺画像から情報を抽出してkintoneへ登録するような処理を書いています。では動作確認のために実行してみましょう。</p>\n\n<h2>\n<span id=\"スクリプトの実行-2\" class=\"fragment\"></span><a href=\"#%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%97%E3%83%88%E3%81%AE%E5%AE%9F%E8%A1%8C-2\"><i class=\"fa fa-link\"></i></a>スクリプトの実行</h2>\n\n<p>ではSlackBotを起動してみましょう。トップレベルにあるbot.pyを起動します。</p>\n\n<div class=\"code-frame\" data-lang=\"shell-session\"><div class=\"highlight\"><pre>\n<span class=\"go\">$ python bot.py</span>\n</pre></div></div>\n\n<p>名刺画像をアップロードしてコメントを書いてみましょう。<br>\n<a href=\"https://qiita-image-store.s3.amazonaws.com/0/77079/4d561447-022d-f7a3-9fa9-123c957cbd8b.png\" target=\"_blank\" rel=\"nofollow noopener\"><img width=\"400\" alt=\"スクリーンショット 2016-11-08 15.59.53.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/77079/4d561447-022d-f7a3-9fa9-123c957cbd8b.png\"></a></p>\n\n<p>実行結果としてkintoneに情報が登録されたでしょうか？<br>\n<a href=\"https://qiita-image-store.s3.amazonaws.com/0/77079/f98b2741-6db0-ca9f-d303-2b343daac10f.png\" target=\"_blank\" rel=\"nofollow noopener\"><img width=\"400\" alt=\"スクリーンショット 2016-11-08 16.01.46.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/77079/f98b2741-6db0-ca9f-d303-2b343daac10f.png\"></a></p>\n\n<h1>\n<span id=\"おわりに\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\"><i class=\"fa fa-link\"></i></a>おわりに</h1>\n\n<p>いかがだったでしょうか。<br>\nVision API、Natural Language API、kintone、Slackを組み合わせて名刺管理アプリケーションを作って見ました。可能性を感じていただけたでしょうか？</p>\n\n<p>今回は登録しかしませんでしたが、Botを使っているのでインタラクティブなアプリを作ることもできます。<br>\nこれらのweb APIや他のweb API、もしくは、自作のweb APIを用意して、賢い処理をする仕組みを考えてみましょう！</p>\n\n<p>おつかれさまでした。</p>\n\n<h1>\n<span id=\"記事まとめ\" class=\"fragment\"></span><a href=\"#%E8%A8%98%E4%BA%8B%E3%81%BE%E3%81%A8%E3%82%81\"><i class=\"fa fa-link\"></i></a>記事まとめ</h1>\n\n<p>今回のハンズオンの内容は３つの記事にまとめています。</p>\n\n<ul>\n<li><a href=\"http://qiita.com/Hironsan/items/be3497972fb3517cb2b2\" id=\"reference-fe9016330511306338f8\">kintoneで名刺管理アプリを作ってみよう</a></li>\n<li><a href=\"http://qiita.com/Hironsan/items/166515acec35658986b2\">Vision APIとNatural Language APIを組み合わせて名刺から情報抽出する</a></li>\n<li><a href=\"http://qiita.com/Hironsan/items/9bfba01c37e9fcd7b8af\">名刺から情報を抽出するSlackBotを作る</a></li>\n</ul>\n\n<p>事前準備は以下の記事からお願いします。</p>\n\n<ul>\n<li><a href=\"http://qiita.com/Hironsan/items/a81eef912881b1051de5\" id=\"reference-b4487970b977921f807e\">kintone x 機械学習で実現する簡単名刺管理@kintone Café</a></li>\n</ul>\n",
    "body": "# はじめに\n今までやってきたことを組み合わせてSlackにコメント付きで名刺画像をアップロードすると、名刺情報をkintoneに登録するようにしてみましょう。APIを使うためにPythonを用いて作ることにします。\n\n前回記事はこちら:\n\n* [Vision APIとNatural Language APIを組み合わせて名刺から情報抽出する](http://qiita.com/Hironsan/items/166515acec35658986b2)\n\n# これから作るアプリ\n以下のように名刺画像をSlackにアップロードするとBotが情報を抽出してkintoneに登録してくれます。\n<img width=\"450\" alt=\"スクリーンショット 2016-11-08 15.59.53.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/77079/4d561447-022d-f7a3-9fa9-123c957cbd8b.png\">\n\n[Slackとは？](https://www.youtube.com/watch?v=9RJZMSsH7-g)\n\n# アプリ作成の流れ\nStep 0：アプリ作成の準備をする\n↓\nStep 1：pykintoneを使ってkintoneにデータ登録をする\n↓\nStep 2：SlackBotを作る\n↓\nStep 3：Slackからkintoneへ名刺情報を登録する\n\n\n# Step0(10min) アプリ作成の準備をする\nアプリを作るために、必要なライブラリのインストール、SlackBotアカウントの作成、APIキーの設定を行います。\n\n## 必要なライブラリをインストールする\nアプリを作成するために必要なライブラリをインストールします。以下のコマンドを実行してインストールしてください。\n\n```shell-session\n$ pip install pykintone\n$ pip install slackbot\n```\n\n## SlackBotアカウントを作成する\nまずはSlack Botアカウントを作成しましょう。\n\n<!--\n[https://api.slack.com/bot-users](https://api.slack.com/bot-users)\n-->\n[https://my.slack.com/services/new/bot](https://my.slack.com/services/new/bot)\n\n既にチームのSlackは開設済で、権限のあるユーザでログインしているものとします。その状態で、上記リンクを開くと、Botアカウントの作成画面が開きます。表示されているフォーム中にBotアカウントのユーザ名を入力して、「Add bot integration」を押してください。\n<img width=\"450\" alt=\"スクリーンショット 2016-08-21 22.10.05.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/77079/3273c39b-618d-b712-2928-7905516fd9a0.png\">\n\n\n「Add bot integration」を押すと、新たにフォームが表示されます。その中の「API Token」は後で作成するBotで用いるのでメモしてください。\n<img width=\"450\" alt=\"スクリーンショット 2016-08-21 22.25.23.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/77079/42c5aba5-0ced-6ee6-4b77-00bd3ecac688.png\">\n\n\n「Customize Icon」や「Customize Name」で作成したBotの名前やアイコン画像を変更できます。変更内容を「Save Integration」で保存します。\n<img width=\"450\" alt=\"スクリーンショット 2016-08-21 22.26.46.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/77079/455e3859-7487-b7f3-a3bb-4257e099d203.png\">\n\n\nこの後のテスト用にプライベートチャンネルを作成して作成したBotを登録しておきましょう。下記のように設定したら、「Create Channel」で内容を保存します。\n<img width=\"450\" alt=\"スクリーンショット 2016-08-21 22.30.18.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/77079/a28c5a27-cb19-cc78-cc39-8e452e9ac920.png\">\n\n以上でSlackBotの設定は完了です。\n\n\n## APIキーを設定する\n### SlackのAPIキーを設定する\nSlackで取得したAPIキーを設定ファイル(plugins/config/slack.yaml)に記述します。エディタでslack.yamlを開いて、tokenの値をあなたのSlackのAPIキーの値で上書きしましょう。xxxの部分を書き換えてください。\n\n```yaml:slack.yaml\ntoken: xxx\n```\n\n### kintoneのAPIキーを設定する\nkintoneで取得したAPIキー、ドメイン名、アプリIDを設定ファイル(plugins/config/kintone.yaml)に記述します。エディタでkintone.yamlを開いて、domain、id、tokenの値をあなたのkintoneアプリのドメイン名、アプリID、APIキーの値で上書きしましょう。xxxの部分を書き換えてください。\n\n```yaml:kintone.yaml\ndomain: xxx\napps:\n    test:\n        id: xxx\n        token: xxx\n```\n\n# Step1(10min) pykintoneを使ってkintoneにデータ登録をする\nここではpykintoneを使ってkintoneに情報を登録するためのスクリプトの記述を行います。記述を行ったら、動作確認のためにスクリプトを実行します。ではまずはスクリプトの記述から行いましょう。\n\n## スクリプトの記述\nkintoneに情報を登録するために、スクリプトを記述します。スクリプトの場所は、plugins/apis/kintone.pyです。エディタでkintone.pyを開いて、内容を以下のように書き換えましょう。書き換え終わったら保存してください。その際の文字コードはUTF8でお願いします。\n\n```py3\n# -*- coding: utf-8 -*-\nimport pykintone\nfrom pykintone import model\nimport pykintone.structure_field as sf\n\n\nclass BusinessCard(model.kintoneModel):\n\n    def __init__(self, app, name, company, location, impression, submitter, image_path):\n        super(BusinessCard, self).__init__()\n        self.name = name\n        self.company = company\n        self.location = location\n        self.impression = impression\n        self.submitter = submitter\n        self.image = [sf.File.upload(image_path, app)]\n\n\ndef create_card(comment, entities, file_path, submitter, conf_path):\n    app = pykintone.load(conf_path).app()\n\n    name, company, location = entities['PERSON'], entities['ORGANIZATION'], entities['LOCATION']\n    card = BusinessCard(app, name, company, location, comment, submitter, file_path)\n    result = app.create(card)\n\n    if result.ok:\n        return result\n    else:\n        print(result.error)\n```\n\ncreate_cardに名刺情報とAPIキーの設定ファイルを与えることで、名刺情報をkintoneに登録してくれます。では動作確認のために実行してみましょう。\n\n\n## スクリプトの実行\n先ほど書いたスクリプトを実行してみましょう。\nまずplugins/testsフォルダに移動してください。その中にtest_kintone.pyがあるのを確認できるでしょうか。test_kintone.pyでは先ほど書いたスクリプトのcreate_cardを呼び出すように指定しています。つまり、正しく動作すれば名刺情報を与えた時にその情報がkintoneに登録されるはずです。\n\n```shell-session\n$ python test_kintone.py data/example.png\n```\n\n実行結果として以下のようにkintoneに名刺情報が登録されたでしょうか？\n<img width=\"1044\" alt=\"スクリーンショット 2016-11-08 15.19.12.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/77079/eb5705d8-143e-9ca1-6677-a33a595888c9.png\">\n\n\n\n# Step2(10min) SlackBotを作る\nここではごくごく基礎的なSlackBotを動かすためのスクリプトの記述を行います。記述を行ったら、動作確認のためにスクリプトを実行します。ではまずはスクリプトの記述から行いましょう。\n\n## スクリプトの記述\nSlackBotを作るために、スクリプトを記述します。スクリプトの場所は、plugins/slack.pyです。エディタでslack.pyを開いて、以下の内容を**<font color=\"red\">追記</font>**してください。追記し終わったら保存してください。その際の文字コードはUTF8でお願いします。\n\n```py3\nfrom slackbot.bot import respond_to\n\n@respond_to('こんにちは')\n@respond_to('今日は')\ndef hello(message):\n    message.reply('こんにちは!')\n```\n\n“respond_to”にマッチするキーワードを指定することで、Botに対するメンションに反応するようになります。とにかく動かしてみましょう。\n\n\n## スクリプトの実行\nではSlackBotを起動してみましょう。\nトップレベルにあるbot.pyを起動して**<font color=\"red\">@をつけて</font>**メッセージを送ってみましょう。\n\n```shell-session\n$ python bot.py\n```\n\n以下のように反応したでしょうか？\n<img width=\"379\" alt=\"スクリーンショット 2016-11-08 15.19.12.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/77079/050c33a3-f351-5a31-2042-9c2cd01442d3.png\">\n\n\n\n# Step3(10min) Slackからkintoneへ名刺情報を登録する\nさて、いよいよ今までの集大成です。Slackに名刺画像をアップロードすると、SlackBot経由でkintoneに情報を登録します。まずはVision API、Natural Language API、kintone APIを統合したSlackBotスクリプトの記述を行います。記述を行ったら、動作確認のためにスクリプトを実行します。ではまずはスクリプトの記述から行いましょう。\n\n## スクリプトの記述\nSlackBotからkintoneに名刺情報を登録するためのスクリプトを記述します。スクリプトの場所は、plugins/slack.pyです。エディタでslack.pyを開いて、以下の内容を**<font color=\"red\">追記</font>**してください。追記し終わったら保存してください。その際の文字コードはUTF8でお願いします。\n\n```py3\n@listen_to('(.*)')\ndef anymessage(message, something):\n    if 'file' in message.body:\n        slack_token = loader(os.path.join(BASE_DIR, 'config/slack.yaml'))\n        google_token = loader(os.path.join(BASE_DIR, 'config/google.yaml'))\n        kintone_conf = os.path.join(BASE_DIR, 'config/kintone.yaml')\n\n        url = message.body['file']['url_private_download']\n        submitter = get_user_name(message.body['user'], slack_token['token'])\n        img_path = download_image(url, slack_token['token'])\n\n        entities = extract_entities_from_img(img_path, google_token['token'])\n\n        comment = message.body['file']['initial_comment']['comment']\n        create_card(comment, entities, img_path, submitter, kintone_conf)\n        message.reply('名刺情報を登録しました。')\n    else:\n        message.reply('名刺情報の登録をできますよ。')\n```\n\n名刺画像がアップロードされた場合は、名刺画像から情報を抽出してkintoneへ登録するような処理を書いています。では動作確認のために実行してみましょう。\n\n\n## スクリプトの実行\nではSlackBotを起動してみましょう。トップレベルにあるbot.pyを起動します。\n\n```shell-session\n$ python bot.py\n```\n\n名刺画像をアップロードしてコメントを書いてみましょう。\n<img width=\"400\" alt=\"スクリーンショット 2016-11-08 15.59.53.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/77079/4d561447-022d-f7a3-9fa9-123c957cbd8b.png\">\n\n\n\n実行結果としてkintoneに情報が登録されたでしょうか？\n<img width=\"400\" alt=\"スクリーンショット 2016-11-08 16.01.46.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/77079/f98b2741-6db0-ca9f-d303-2b343daac10f.png\">\n\n\n\n# おわりに\nいかがだったでしょうか。\nVision API、Natural Language API、kintone、Slackを組み合わせて名刺管理アプリケーションを作って見ました。可能性を感じていただけたでしょうか？\n\n今回は登録しかしませんでしたが、Botを使っているのでインタラクティブなアプリを作ることもできます。\nこれらのweb APIや他のweb API、もしくは、自作のweb APIを用意して、賢い処理をする仕組みを考えてみましょう！\n\nおつかれさまでした。\n\n# 記事まとめ\n今回のハンズオンの内容は３つの記事にまとめています。\n\n* [kintoneで名刺管理アプリを作ってみよう](http://qiita.com/Hironsan/items/be3497972fb3517cb2b2)\n* [Vision APIとNatural Language APIを組み合わせて名刺から情報抽出する](http://qiita.com/Hironsan/items/166515acec35658986b2)\n* [名刺から情報を抽出するSlackBotを作る](http://qiita.com/Hironsan/items/9bfba01c37e9fcd7b8af)\n\n\n事前準備は以下の記事からお願いします。\n\n* [kintone x 機械学習で実現する簡単名刺管理@kintone Café](http://qiita.com/Hironsan/items/a81eef912881b1051de5)\n",
    "updated_at": "2016-11-14T12:13:47+09:00",
    "url": "http://qiita.com/Hironsan/items/9bfba01c37e9fcd7b8af",
    "tags": [
        {
            "versions": [],
            "name": "機械学習"
        },
        {
            "versions": [],
            "name": "bot"
        },
        {
            "versions": [],
            "name": "kintone"
        }
    ],
    "id": "9bfba01c37e9fcd7b8af",
    "coediting": false
}